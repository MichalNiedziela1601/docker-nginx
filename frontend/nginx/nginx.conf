log_format compression '$request_id: $uid_got';

map $uid_got $uid_got_t {
    "~*uule=([A-Za-z0-9]{28})" $1;
}

map $request_id $request_id_t {
    "~*([A-Za-z0-9]{21})" $1;
}

map $msec $msec_t {
    ~(.*)\.(.*) $1;
}

map $request_id $req_sec {
    "~*([A-Za-z0-9]{7})" $1;
}

map $request_id $req_back {
    "~*([A-Za-z0-9]{7})([A-Za-z0-9]{10})$" $1$2;
}


server {
  listen 80;
  server_name frontend;
  access_log /var/log/nginx/access.log compression buffer=32k;

  location / {
          userid         on;
          userid_name    uule;
    # This would be the directory where your React app's static files are stored at
    root /usr/share/nginx/html;
    try_files $uri /index.html;
    add_header X-Request-Id $request_id;
    add_header X-connection-Id $connection;
    add_header x-combine $request_id_t-$uid_got_t;
    add_header x-combine-sec $msec_t$req_sec-$uid_got_t;
    add_header x-combine-back $req_back-$uid_got_t;
    add_header x-uule-got $uid_got;
    add_header x-remote-user $remote_user;
    proxy_set_header x-combine $request_id_t-$uid_got_t;
  }

  location /services/m {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://backend:8080/services/m;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
  }
}